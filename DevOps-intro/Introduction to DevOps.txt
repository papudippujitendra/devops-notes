Introduction to DevOps
Why DevOps ?
SDLC : (Software Development Life Cycle) – It is a process to build any package or software or application.
2 models
1)Waterfall model
2)Agile Methodology

Water fall model:-  Requirement or Gathering and analysis
							
				Design or Planning or Architect
						
				Implementation/coding/Development
									
						Test
							
				Release/Delivery/Deploy
							
				Maintenance/Monitoring/Feedback
Drawbacks: 1)It is not suitable for complex projects where changes are in high frequency.
2)Time consuming .
3) Until and unless the current stage we cannot go forward to next stage and at the same time we not go back.
In order to address  this  limitations  or drawbacks we have next model is “AGILE” Methodology
Agile Methodology 
 1)In the Agile Methodology each project is divided into	several “Iterations”	.
2)All the iterations will have specific time it is called Sprints min 2-8 weeks
3)End of Each iterations  MVP(Minimum viable product).

Limitations of Agile methodology:- 1)it is platform dependency and environment dependency.

Development without DevOps:- 1)Release and deploy without mistakes.
		             2)un predictable issues.
			     3)Blame games.
Development with DevOps :- 1)Stream lined deliveries.
			   2)Teamwork in Collaborations.
			   3)Continuous monitoring and feedback.
What Needs to be done:-
 	Developers:- 1) Use system with updated code.
		     2)Use system with little or no waiting time.
	Operations:-1)System required for easy administration
		     2)system should be up and running most of the time.
		     3)Effective monitoring and Feedback system should be maintained.
What Exactly is DevOps in Real Life ?
 
DEV TEAM
1)Plan
2)Code
3)Build
4)Test

Operation Team
1)Release
2)Deploy
3)Operations
4)Monitor

What not comes under DevOps 
1)DevOps is not a role or person or Organisation.
2)DevOps is not a separate team.
3)DevOps is not a product or tool.
4)DevOps is not about just writing the scripts and implementing the tools.

What is DevOps ?
DevOps is a practice that allows a single team to manage the entire development life cycle that is development , testing , deployment and monitoring.
					(Code - Production)
What does DevOps do ?
1)Integrates developers and operations teams.
2)Improves collaboration and productivity.
	i)Automating the infrastructure.
	ii)Automating the workflows.
	iii)Continuously measuring application performances.

Skills of a DevOps Engineer.
   (Tools ) version control system -Git.
	    Continuous Integration -Jenkins.
	    Containerization / Virtualization -Docker and Kubernetes.
	    Configuration management -Ansible.
	    Monitoring - Prometheus and Grafana.
    Networking skills : General networking skills like establishing connection between the containers, container orchestration
    Other skills : People skills, Process skills, Cloud awareness

DevOps Life cycle:
Plan: First stage of DevOps cycle where you can plan, track, visualize and summarize your project before starting it. Ex: JIRA
Code: Second stage of DevOps cycle where developers write their code. Ex: GIT, GitHub
Build: It is Pre-released version and defined by build number rather than by release number. Ex: Apache Maven
Test: Process of executing automatic test as a part of software delivery pipeline in order to obtain feedback on the business risk associated with a software release 
as rapidly as possible. Ex: Selenium, Junit
Release: This place helps to integrate code into the shared repository using which you can detect and locate errors quickly and easily. Ex: Jenkins, Bamboo
Deploy : Manage and maintain development and deployment of software system and servers in any cloud environment. Ex: Ansible
Operate: This phase is to keep the system upgraded with latest updates. Ex: AWS, Azure, Ansible
Monitoring: It ensures that application is performing as desired and environment is stable then it quickly determines when any service is unavailable and understanding underlying causes.
Ex: Prometheus and Grafana
	
					 
					
			  
